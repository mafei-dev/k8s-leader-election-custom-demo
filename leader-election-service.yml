apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-leader-election-custom-demo
data: { }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: k8s-leader-election-custom-demo
  name: k8s-leader-election-custom-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-leader-election-custom-demo
  strategy: { }
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: k8s-leader-election-custom-demo
    spec:
      containers:
        - image: mafeidev/k8s-leader-election-custom-demo:1.0.5
          imagePullPolicy: Always
          name: k8s-leader-election-custom-demo
          ports:
            - containerPort: 8080
          resources: { }
status: { }

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader
  labels:
    app: k8s-leader-election-custom-demo
    group: org.springframework.cloud
rules:
  - apiGroups: [ "" ]
    resources: [ "configmaps","namespaces","nodes", "pods", "services", "endpoints", "secrets" ]
    verbs: [ "get","post","patch","create","update","put", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: k8s-leader-election-custom-demo
    group: org.springframework.cloud
  name: leader
roleRef:
  apiGroup: ""
  kind: Role
  name: leader
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ""